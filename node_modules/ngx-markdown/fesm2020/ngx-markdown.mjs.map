{"version":3,"file":"ngx-markdown.mjs","sources":["../../../lib/src/clipboard-button.component.ts","../../../lib/src/clipboard-options.ts","../../../lib/src/katex-options.ts","../../../lib/src/language.pipe.ts","../../../lib/src/prism-plugin.ts","../../../lib/src/marked-options.ts","../../../lib/src/markdown.service.ts","../../../lib/src/markdown.component.ts","../../../lib/src/markdown.pipe.ts","../../../lib/src/markdown.module.ts","../../../lib/src/mermaid-options.ts","../../../lib/ngx-markdown.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { merge, of, Subject, timer } from 'rxjs';\r\nimport { distinctUntilChanged, map, mapTo, shareReplay, startWith, switchMap } from 'rxjs/operators';\r\n\r\nconst BUTTON_TEXT_COPY = 'Copy';\r\nconst BUTTON_TEXT_COPIED = 'Copied';\r\n\r\n@Component({\r\n  selector: 'markdown-clipboard',\r\n  template: `\r\n    <button\r\n      class=\"markdown-clipboard-button\"\r\n      [class.copied]=\"copied$ | async\"\r\n      (click)=\"onCopyToClipboardClick()\"\r\n    >{{ copiedText$ | async }}</button>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ClipboardButtonComponent {\r\n\r\n  private _buttonClick$ = new Subject<void>();\r\n\r\n  readonly copied$ = this._buttonClick$.pipe(\r\n    switchMap(() => merge(\r\n      of(true),\r\n      timer(3000).pipe(mapTo(false)),\r\n    )),\r\n    distinctUntilChanged(),\r\n    shareReplay(1),\r\n  );\r\n\r\n  readonly copiedText$ = this.copied$.pipe(\r\n    startWith(false),\r\n    map(copied => copied\r\n      ? BUTTON_TEXT_COPIED\r\n      : BUTTON_TEXT_COPY),\r\n  );\r\n\r\n  onCopyToClipboardClick(): void {\r\n    this._buttonClick$.next();\r\n  }\r\n}\r\n","import { TemplateRef, Type } from '@angular/core';\r\n\r\nexport class ClipboardOptions {\r\n  buttonComponent?: Type<unknown>;\r\n}\r\n\r\nexport class ClipboardRenderOptions extends ClipboardOptions {\r\n  buttonTemplate?: TemplateRef<unknown>;\r\n}\r\n","/* eslint-disable */\r\nexport class KatexSpecificOptions {\r\n    /**\r\n     * If `true`, math will be rendered in display mode\r\n     * (math in display style and center math on page)\r\n     *\r\n     * If `false`, math will be rendered in inline mode\r\n     * @default false\r\n     */\r\n    displayMode?: boolean;\r\n    /**\r\n     * If `true`, KaTeX will throw a `ParseError` when\r\n     * it encounters an unsupported command or invalid LaTex\r\n     *\r\n     * If `false`, KaTeX will render unsupported commands as\r\n     * text, and render invalid LaTeX as its source code with\r\n     * hover text giving the error, in color given by errorColor\r\n     * @default true\r\n     */\r\n    throwOnError?: boolean;\r\n    /**\r\n     * A Color string given in format `#XXX` or `#XXXXXX`\r\n     */\r\n    errorColor?: string;\r\n    /**\r\n     * A collection of custom macros.\r\n     *\r\n     * See `src/macros.js` for its usage\r\n     */\r\n    macros?: any;\r\n    /**\r\n     * If `true`, `\\color` will work like LaTeX's `\\textcolor`\r\n     * and takes 2 arguments\r\n     *\r\n     * If `false`, `\\color` will work like LaTeX's `\\color`\r\n     * and takes 1 argument\r\n     *\r\n     * In both cases, `\\textcolor` works as in LaTeX\r\n     *\r\n     * @default false\r\n     */\r\n    colorIsTextColor?: boolean;\r\n    /**\r\n     * All user-specified sizes will be caped to `maxSize` ems\r\n     *\r\n     * If set to Infinity, users can make elements and space\r\n     * arbitrarily large\r\n     *\r\n     * @default Infinity\r\n     */\r\n    maxSize?: number;\r\n    /**\r\n     * Limit the number of macro expansions to specified number\r\n     *\r\n     * If set to `Infinity`, marco expander will try to fully expand\r\n     * as in LaTex\r\n     *\r\n     * @default 1000\r\n     */\r\n    maxExpand?: number;\r\n    /**\r\n     * Allowed protocols in `\\href`\r\n     *\r\n     * Use `_relative` to allow relative urls\r\n     *\r\n     * Use `*` to allow all protocols\r\n     */\r\n    allowedProtocols?: string[];\r\n    /**\r\n     * If `false` or `\"ignore\"`, allow features that make\r\n     * writing in LaTex convenient but not supported by LaTex\r\n     *\r\n     * If `true` or `\"error\"`, throw an error for such transgressions\r\n     *\r\n     * If `\"warn\"`, warn about behavior via `console.warn`\r\n     *\r\n     * @default \"warn\"\r\n     */\r\n    strict?: boolean | string | Function;\r\n}\r\n\r\nexport interface RenderMathInElementSpecificOptionsDelimiters {\r\n    /**\r\n     * A string which starts the math expression (i.e. the left delimiter)\r\n     */\r\n    left: string;\r\n    /**\r\n     * A string which ends the math expression (i.e. the right delimiter)\r\n     */\r\n    right: string;\r\n    /**\r\n     * A boolean of whether the math in the expression should be rendered in display mode or not\r\n     */\r\n    display: boolean\r\n}\r\n\r\nexport interface RenderMathInElementSpecificOptions {\r\n    /**\r\n     * A list of delimiters to look for math\r\n     *\r\n     * @default [\r\n     *   {left: \"$$\", right: \"$$\", display: true},\r\n     *   {left: \"\\\\(\", right: \"\\\\)\", display: false},\r\n     *   {left: \"\\\\[\", right: \"\\\\]\", display: true}\r\n     * ]\r\n     */\r\n    delimiters?: ReadonlyArray<RenderMathInElementSpecificOptionsDelimiters> | undefined;\r\n    /**\r\n     * A list of DOM node types to ignore when recursing through\r\n     *\r\n     * @default [\"script\", \"noscript\", \"style\", \"textarea\", \"pre\", \"code\"]\r\n     */\r\n    ignoredTags?: ReadonlyArray<keyof HTMLElementTagNameMap> | undefined;\r\n    /**\r\n     * A list of DOM node class names to ignore when recursing through\r\n     *\r\n     * @default []\r\n     */\r\n    ignoredClasses?: string[] | undefined;\r\n\r\n    /**\r\n     * A callback method returning a message and an error stack in case of an critical error during rendering\r\n     * @param msg Message generated by KaTeX\r\n     * @param err Caught error\r\n     *\r\n     * @default console.error\r\n     */\r\n    errorCallback?(msg: string, err: Error): void;\r\n}\r\n\r\n/**\r\n * renderMathInElement options contain KaTeX render options and renderMathInElement specific options\r\n */\r\nexport type KatexOptions = KatexSpecificOptions & RenderMathInElementSpecificOptions;\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'language',\r\n})\r\nexport class LanguagePipe implements PipeTransform {\r\n\r\n  transform(value: string, language: string): string {\r\n    if (value == null) {\r\n      value = '';\r\n    }\r\n    if (language == null) {\r\n      language = '';\r\n    }\r\n    if (typeof value !== 'string') {\r\n      console.error(`LanguagePipe has been invoked with an invalid value type [${typeof value}]`);\r\n      return value;\r\n    }\r\n    if (typeof language !== 'string') {\r\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${typeof language}]`);\r\n      return value;\r\n    }\r\n    return '```' + language + '\\n' +  value + '\\n```';\r\n  }\r\n}\r\n","export enum PrismPlugin {\r\n  CommandLine = 'command-line',\r\n  LineHighlight = 'line-highlight',\r\n  LineNumbers = 'line-numbers',\r\n}\r\n","/* eslint-disable */\r\nimport { MarkedRenderer } from './marked-renderer';\r\n\r\nexport class MarkedOptions {\r\n  /**\r\n   * A prefix URL for any relative link.\r\n   */\r\n  baseUrl?: string;\r\n\r\n  /**\r\n   * Enable GFM line breaks. This option requires the gfm option to be true.\r\n   */\r\n  breaks?: boolean;\r\n\r\n  /**\r\n   * Enable GitHub flavored markdown.\r\n   */\r\n  gfm?: boolean;\r\n\r\n  /**\r\n   * Include an id attribute when emitting headings.\r\n   */\r\n  headerIds?: boolean;\r\n\r\n  /**\r\n   * Set the prefix for header tag ids.\r\n   */\r\n  headerPrefix?: string;\r\n\r\n  /**\r\n   * Set the prefix for code block classes.\r\n   */\r\n  langPrefix?: string;\r\n\r\n  /**\r\n   * Mangle autolinks (<email@domain.com>).\r\n   */\r\n  mangle?: boolean;\r\n\r\n  /**\r\n   * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.\r\n   */\r\n  pedantic?: boolean;\r\n\r\n  /**\r\n   * Type: object Default: new Renderer()\r\n   *\r\n   * An object containing functions to render tokens to HTML.\r\n   */\r\n  renderer?: MarkedRenderer;\r\n\r\n  /**\r\n   * Shows an HTML error message when rendering fails.\r\n   */\r\n  silent?: boolean;\r\n\r\n  /**\r\n   * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.\r\n   */\r\n  smartLists?: boolean;\r\n\r\n  /**\r\n   * Use \"smart\" typograhic punctuation for things like quotes and dashes.\r\n   */\r\n  smartypants?: boolean;\r\n\r\n  /**\r\n   * Generate closing slash for self-closing tags (<br/> instead of <br>)\r\n   */\r\n  xhtml?: boolean;\r\n\r\n  /**\r\n   * A function to highlight code blocks. The function takes three arguments: code, lang, and callback.\r\n   */\r\n  highlight?(code: string, lang: string, callback?: (error: any | undefined, code: string) => void): string;\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { EmbeddedViewRef, Inject, Injectable, InjectionToken, Optional, PLATFORM_ID, SecurityContext, ViewContainerRef } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { marked, Renderer } from 'marked';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ClipboardButtonComponent } from './clipboard-button.component';\r\nimport { ClipboardOptions, ClipboardRenderOptions } from './clipboard-options';\r\nimport { KatexOptions } from './katex-options';\r\nimport { MarkedOptions } from './marked-options';\r\nimport { MarkedRenderer } from './marked-renderer';\r\nimport { MermaidAPI } from './mermaid-options';\r\n\r\n// clipboard\r\ndeclare let ClipboardJS: {\r\n  new (\r\n    selector: string | Element | NodeListOf<Element>,\r\n    options?: { text?: (elem: Element) => string; },\r\n  ): typeof ClipboardJS;\r\n  destroy(): void;\r\n};\r\n\r\n// emoji\r\ndeclare let joypixels: {\r\n  shortnameToUnicode(input: string): string;\r\n};\r\n\r\n// katex\r\ndeclare let katex: unknown;\r\ndeclare function renderMathInElement(elem: HTMLElement, options?: KatexOptions): void;\r\n\r\n// mermaid\r\ndeclare let mermaid: {\r\n  initialize: (options: MermaidAPI.Config) => void;\r\n  init: (nodes: string | Node | NodeList) => void;\r\n  parse: (text: string) => string;\r\n};\r\n\r\n// prism\r\ndeclare let Prism: {\r\n  highlightAllUnder: (element: Element | Document) => void;\r\n};\r\n\r\n/* eslint-disable max-len */\r\nexport const errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\r\nexport const errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\r\nexport const errorMermaidNotLoaded = '[ngx-markdown] When using the `mermaid` attribute you *have to* include Mermaid files to `angular.json` or use imports. See README for more information';\r\nexport const errorClipboardNotLoaded = '[ngx-markdown] When using the `clipboard` attribute you *have to* include Clipboard files to `angular.json` or use imports. See README for more information';\r\nexport const errorClipboardViewContainerRequired = '[ngx-markdown] When using the `clipboard` attribute you *have to* provide the `viewContainerRef` parameter to `MarkdownService.render()` function';\r\nexport const errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\r\n/* eslint-enable max-len */\r\n\r\nexport const SECURITY_CONTEXT = new InjectionToken<SecurityContext>('SECURITY_CONTEXT');\r\n\r\nexport interface ParseOptions {\r\n  decodeHtml?: boolean;\r\n  inline?: boolean;\r\n  emoji?: boolean;\r\n  mermaid?: boolean;\r\n  markedOptions?: MarkedOptions;\r\n}\r\n\r\nexport interface RenderOptions {\r\n  clipboard?: boolean;\r\n  clipboardOptions?: ClipboardRenderOptions;\r\n  katex?: boolean;\r\n  katexOptions?: KatexOptions;\r\n  mermaid?: boolean;\r\n  mermaidOptions?: MermaidAPI.Config;\r\n}\r\n\r\nexport class ExtendedRenderer extends Renderer {\r\n  ɵNgxMarkdownRendererExtended = false;\r\n}\r\n\r\n@Injectable()\r\nexport class MarkdownService {\r\n\r\n  private readonly DEFAULT_PARSE_OPTIONS: ParseOptions = {\r\n    decodeHtml: false,\r\n    inline: false,\r\n    emoji: false,\r\n    mermaid: false,\r\n    markedOptions: undefined,\r\n  };\r\n\r\n  private readonly DEFAULT_RENDER_OPTIONS: RenderOptions = {\r\n    clipboard: false,\r\n    clipboardOptions: undefined,\r\n    katex: false,\r\n    katexOptions: undefined,\r\n    mermaid: false,\r\n    mermaidOptions: undefined,\r\n  };\r\n\r\n  private readonly DEFAULT_MARKED_OPTIONS: MarkedOptions = {\r\n    renderer: new MarkedRenderer(),\r\n  };\r\n\r\n  private readonly DEFAULT_KATEX_OPTIONS: KatexOptions = {\r\n    delimiters: [\r\n      { left: \"$$\", right: \"$$\", display: true },\r\n      { left: \"$\", right: \"$\", display: false },\r\n      { left: \"\\\\(\", right: \"\\\\)\", display: false },\r\n      { left: \"\\\\begin{equation}\", right: \"\\\\end{equation}\", display: true },\r\n      { left: \"\\\\begin{align}\", right: \"\\\\end{align}\", display: true },\r\n      { left: \"\\\\begin{alignat}\", right: \"\\\\end{alignat}\", display: true },\r\n      { left: \"\\\\begin{gather}\", right: \"\\\\end{gather}\", display: true },\r\n      { left: \"\\\\begin{CD}\", right: \"\\\\end{CD}\", display: true },\r\n      { left: \"\\\\[\", right: \"\\\\]\", display: true },\r\n    ],\r\n  };\r\n\r\n  private readonly DEFAULT_MERMAID_OPTIONS: MermaidAPI.Config = {\r\n    startOnLoad: false,\r\n  };\r\n\r\n  private readonly DEFAULT_CLIPBOARD_OPTIONS: ClipboardOptions = {\r\n    buttonComponent: undefined,\r\n  };\r\n\r\n  private _options: MarkedOptions | undefined;\r\n\r\n  get options(): MarkedOptions { return this._options!; }\r\n  set options(value: MarkedOptions | undefined) {\r\n    this._options = { ...this.DEFAULT_MARKED_OPTIONS, ...value };\r\n  }\r\n\r\n  get renderer(): MarkedRenderer { return this.options.renderer!; }\r\n  set renderer(value: MarkedRenderer) {\r\n    this.options.renderer = value;\r\n  }\r\n\r\n  private readonly _reload$ = new Subject<void>();\r\n  readonly reload$ = this._reload$.asObservable();\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platform: Object,\r\n    @Inject(SECURITY_CONTEXT) private securityContext: SecurityContext,\r\n    @Optional() private http: HttpClient,\r\n    @Optional() private clipboardOptions: ClipboardOptions,\r\n    @Optional() options: MarkedOptions,\r\n    private sanitizer: DomSanitizer,\r\n  ) {\r\n    this.options = options;\r\n  }\r\n\r\n  parse(markdown: string, options: ParseOptions = this.DEFAULT_PARSE_OPTIONS): string {\r\n    const {\r\n      decodeHtml,\r\n      inline,\r\n      emoji,\r\n      mermaid,\r\n      markedOptions = this.options,\r\n    } = options;\r\n\r\n    if (mermaid) {\r\n      this.renderer = this.extendRenderer(markedOptions.renderer || new Renderer());\r\n    }\r\n\r\n    const trimmed = this.trimIndentation(markdown);\r\n    const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\r\n    const emojified = emoji ? this.parseEmoji(decoded) : decoded;\r\n    const marked = this.parseMarked(emojified, markedOptions, inline);\r\n\r\n    return this.sanitizer.sanitize(this.securityContext, marked) || '';\r\n  }\r\n\r\n  render(element: HTMLElement, options: RenderOptions = this.DEFAULT_RENDER_OPTIONS, viewContainerRef?: ViewContainerRef): void {\r\n    const {\r\n      clipboard,\r\n      clipboardOptions,\r\n      katex,\r\n      katexOptions,\r\n      mermaid,\r\n      mermaidOptions,\r\n    } = options;\r\n\r\n    if (clipboard) {\r\n      this.renderClipboard(element, viewContainerRef, {\r\n        ...this.DEFAULT_CLIPBOARD_OPTIONS,\r\n        ...this.clipboardOptions,\r\n        ...clipboardOptions,\r\n      });\r\n    }\r\n    if (katex) {\r\n      this.renderKatex(element, {\r\n        ...this.DEFAULT_KATEX_OPTIONS,\r\n        ...katexOptions,\r\n      });\r\n    }\r\n    if (mermaid) {\r\n      this.renderMermaid(element, {\r\n        ...this.DEFAULT_MERMAID_OPTIONS,\r\n        ...mermaidOptions,\r\n      });\r\n    }\r\n\r\n    this.highlight(element);\r\n  }\r\n\r\n  reload(): void {\r\n    this._reload$.next();\r\n  }\r\n\r\n  getSource(src: string): Observable<string> {\r\n    if (!this.http) {\r\n      throw new Error(errorSrcWithoutHttpClient);\r\n    }\r\n    return this.http\r\n      .get(src, { responseType: 'text' })\r\n      .pipe(map(markdown => this.handleExtension(src, markdown)));\r\n  }\r\n\r\n  highlight(element?: Element | Document): void {\r\n    if (!isPlatformBrowser(this.platform)) {\r\n      return;\r\n    }\r\n    if (typeof Prism === 'undefined' || typeof Prism.highlightAllUnder === 'undefined') {\r\n      return;\r\n    }\r\n    if (!element) {\r\n      element = document;\r\n    }\r\n    const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\r\n    Array.prototype.forEach.call(noLanguageElements, (x: Element) => x.classList.add('language-none'));\r\n    Prism.highlightAllUnder(element);\r\n  }\r\n\r\n  private decodeHtml(html: string): string {\r\n    if (!isPlatformBrowser(this.platform)) {\r\n      return html;\r\n    }\r\n    const textarea = document.createElement('textarea');\r\n    textarea.innerHTML = html;\r\n    return textarea.value;\r\n  }\r\n\r\n  private extendRenderer(renderer: Renderer): Renderer {\r\n    const extendedRenderer = renderer as ExtendedRenderer;\r\n    if (extendedRenderer.ɵNgxMarkdownRendererExtended === true) {\r\n      return renderer;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/unbound-method\r\n    const defaultCode = renderer.code;\r\n    renderer.code = function (code: string, language: string | undefined, isEscaped: boolean) {\r\n      return language === 'mermaid'\r\n        ? `<div class=\"mermaid\">${code}</div>`\r\n        : defaultCode.call(this, code, language, isEscaped);\r\n    };\r\n\r\n    extendedRenderer.ɵNgxMarkdownRendererExtended = true;\r\n\r\n    return renderer;\r\n  }\r\n\r\n  private handleExtension(src: string, markdown: string): string {\r\n    const urlProtocolIndex = src.lastIndexOf('://');\r\n    const urlWithoutProtocol = urlProtocolIndex > -1\r\n      ? src.substring(urlProtocolIndex + 4)\r\n      : src;\r\n\r\n    const lastSlashIndex = urlWithoutProtocol.lastIndexOf('/');\r\n    const lastUrlSegment = lastSlashIndex > -1\r\n      ? urlWithoutProtocol.substring(lastSlashIndex + 1).split('?')[0]\r\n      : '';\r\n\r\n    const lastDotIndex = lastUrlSegment.lastIndexOf('.');\r\n    const extension = lastDotIndex > -1\r\n      ? lastUrlSegment.substring(lastDotIndex + 1)\r\n      : '';\r\n\r\n    return !!extension && extension !== 'md'\r\n      ? '```' + extension + '\\n' + markdown + '\\n```'\r\n      : markdown;\r\n  }\r\n\r\n  private parseMarked(html: string, markedOptions: MarkedOptions, inline = false): string {\r\n    if (!isPlatformBrowser(this.platform)) {\r\n      return html;\r\n    }\r\n    if (inline) {\r\n      return marked.parseInline(html, markedOptions);\r\n    }\r\n    return marked.parse(html, markedOptions);\r\n  }\r\n\r\n  private parseEmoji(html: string): string {\r\n    if (!isPlatformBrowser(this.platform)) {\r\n      return html;\r\n    }\r\n    if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\r\n      throw new Error(errorJoyPixelsNotLoaded);\r\n    }\r\n    return joypixels.shortnameToUnicode(html);\r\n  }\r\n\r\n  private renderKatex(element: HTMLElement, options: KatexOptions): void {\r\n    if (!isPlatformBrowser(this.platform)) {\r\n      return;\r\n    }\r\n    if (typeof katex === 'undefined' || typeof renderMathInElement === 'undefined') {\r\n      throw new Error(errorKatexNotLoaded);\r\n    }\r\n    renderMathInElement(element, options);\r\n  }\r\n\r\n  private renderClipboard(element: HTMLElement, viewContainerRef: ViewContainerRef | undefined, options: ClipboardRenderOptions): void {\r\n    if (!isPlatformBrowser(this.platform)) {\r\n      return;\r\n    }\r\n    if (typeof ClipboardJS === 'undefined') {\r\n      throw new Error(errorClipboardNotLoaded);\r\n    }\r\n    if (!viewContainerRef) {\r\n      throw new Error(errorClipboardViewContainerRequired);\r\n    }\r\n\r\n    const {\r\n      buttonComponent,\r\n      buttonTemplate,\r\n    } = options;\r\n\r\n    // target every <pre> elements\r\n    const preElements = element.querySelectorAll('pre');\r\n    for (let i = 0; i < preElements.length; i++) {\r\n      const preElement = preElements.item(i);\r\n\r\n      // create <pre> wrapper element\r\n      const preWrapperElement = document.createElement('div');\r\n      preWrapperElement.style.position = 'relative';\r\n      preElement.parentNode!.insertBefore(preWrapperElement, preElement);\r\n      preWrapperElement.appendChild(preElement);\r\n\r\n      // create toolbar element\r\n      const toolbarWrapperElement = document.createElement('div');\r\n      toolbarWrapperElement.style.position = 'absolute';\r\n      toolbarWrapperElement.style.top = '.5em';\r\n      toolbarWrapperElement.style.right = '.5em';\r\n      toolbarWrapperElement.style.opacity = '0';\r\n      toolbarWrapperElement.style.transition = 'opacity 250ms ease-out';\r\n      preWrapperElement.insertAdjacentElement('beforeend', toolbarWrapperElement);\r\n\r\n      // register listener to show/hide toolbar\r\n      preElement.onmouseover = () => toolbarWrapperElement.style.opacity = '1';\r\n      preElement.onmouseout = () => toolbarWrapperElement.style.opacity = '0';\r\n\r\n      // declare embeddedViewRef holding variable\r\n      let embeddedViewRef: EmbeddedViewRef<unknown>;\r\n\r\n      // use provided component via input property\r\n      // or provided via ClipboardOptions provider\r\n      if (buttonComponent) {\r\n        const componentRef = viewContainerRef.createComponent(buttonComponent);\r\n        embeddedViewRef = componentRef.hostView as EmbeddedViewRef<unknown>;\r\n      }\r\n      // use provided template via input property\r\n      else if (buttonTemplate) {\r\n        embeddedViewRef = viewContainerRef.createEmbeddedView(buttonTemplate);\r\n      }\r\n      // use default component\r\n      else {\r\n        const componentRef = viewContainerRef.createComponent(ClipboardButtonComponent);\r\n        embeddedViewRef = componentRef.hostView as EmbeddedViewRef<unknown>;\r\n      }\r\n\r\n      // declare clipboard instance variable\r\n      let clipboardInstance: typeof ClipboardJS;\r\n\r\n      // attach clipboard.js to root node\r\n      embeddedViewRef.rootNodes.forEach((node: HTMLElement) => {\r\n        node.onmouseover = () => toolbarWrapperElement.style.opacity = '1';\r\n        toolbarWrapperElement.appendChild(node);\r\n        clipboardInstance = new ClipboardJS(node, { text: () => preElement.innerText });\r\n      });\r\n\r\n      // destroy clipboard instance when view is destroyed\r\n      embeddedViewRef.onDestroy(() => clipboardInstance.destroy());\r\n    }\r\n  }\r\n\r\n  private renderMermaid(element: HTMLElement, options: MermaidAPI.Config = this.DEFAULT_MERMAID_OPTIONS): void {\r\n    if (!isPlatformBrowser(this.platform)) {\r\n      return;\r\n    }\r\n    if (typeof mermaid === 'undefined' || typeof mermaid.init === 'undefined') {\r\n      throw new Error(errorMermaidNotLoaded);\r\n    }\r\n    const mermaidElements = element.querySelectorAll('.mermaid');\r\n    if (mermaidElements.length === 0) {\r\n      return;\r\n    }\r\n    mermaid.initialize(options);\r\n    mermaid.init(mermaidElements);\r\n  }\r\n\r\n  private trimIndentation(markdown: string): string {\r\n    if (!markdown) {\r\n      return '';\r\n    }\r\n    let indentStart: number;\r\n    return markdown\r\n      .split('\\n')\r\n      .map(line => {\r\n        let lineIdentStart = indentStart;\r\n        if (line.length > 0) {\r\n          lineIdentStart = isNaN(lineIdentStart)\r\n            ? line.search(/\\S|$/)\r\n            : Math.min(line.search(/\\S|$/), lineIdentStart);\r\n        }\r\n        if (isNaN(indentStart)) {\r\n          indentStart = lineIdentStart;\r\n        }\r\n        return lineIdentStart\r\n          ? line.substring(lineIdentStart)\r\n          : line;\r\n      }).join('\\n');\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { KatexOptions } from './katex-options';\r\nimport { MarkdownService, ParseOptions, RenderOptions } from './markdown.service';\r\nimport { MermaidAPI } from './mermaid-options';\r\nimport { PrismPlugin } from './prism-plugin';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'markdown, [markdown]',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class MarkdownComponent implements OnChanges, AfterViewInit, OnDestroy {\r\n\r\n  protected static ngAcceptInputType_clipboard: boolean | '';\r\n  protected static ngAcceptInputType_emoji: boolean | '';\r\n  protected static ngAcceptInputType_katex: boolean | '';\r\n  protected static ngAcceptInputType_mermaid: boolean | '';\r\n  protected static ngAcceptInputType_lineHighlight: boolean | '';\r\n  protected static ngAcceptInputType_lineNumbers: boolean | '';\r\n  protected static ngAcceptInputType_commandLine: boolean | '';\r\n\r\n  @Input() data: string | undefined;\r\n  @Input() src: string | undefined;\r\n\r\n  @Input()\r\n  get inline(): boolean { return this._inline; }\r\n  set inline(value: boolean) { this._inline = this.coerceBooleanProperty(value); }\r\n\r\n  // Plugin - clipboard\r\n  @Input()\r\n  get clipboard(): boolean { return this._clipboard; }\r\n  set clipboard(value: boolean) { this._clipboard = this.coerceBooleanProperty(value); }\r\n  @Input() clipboardButtonComponent: Type<unknown> | undefined;\r\n  @Input() clipboardButtonTemplate: TemplateRef<unknown> | undefined;\r\n\r\n  // Plugin - emoji\r\n  @Input()\r\n  get emoji(): boolean { return this._emoji; }\r\n  set emoji(value: boolean) { this._emoji = this.coerceBooleanProperty(value); }\r\n\r\n  // Plugin - katex\r\n  @Input()\r\n  get katex(): boolean { return this._katex; }\r\n  set katex(value: boolean) { this._katex = this.coerceBooleanProperty(value); }\r\n  @Input() katexOptions: KatexOptions | undefined;\r\n\r\n  // Plugin - mermaid\r\n  @Input()\r\n  get mermaid(): boolean { return this._mermaid; }\r\n  set mermaid(value: boolean) { this._mermaid = this.coerceBooleanProperty(value); }\r\n  @Input() mermaidOptions: MermaidAPI.Config | undefined;\r\n\r\n  // Plugin - lineHighlight\r\n  @Input()\r\n  get lineHighlight(): boolean { return this._lineHighlight; }\r\n  set lineHighlight(value: boolean) { this._lineHighlight = this.coerceBooleanProperty(value); }\r\n  @Input() line: string | string[] | undefined;\r\n  @Input() lineOffset: number | undefined;\r\n\r\n  // Plugin - lineNumbers\r\n  @Input()\r\n  get lineNumbers(): boolean { return this._lineNumbers; }\r\n  set lineNumbers(value: boolean) { this._lineNumbers = this.coerceBooleanProperty(value); }\r\n  @Input() start: number | undefined;\r\n\r\n  // Plugin - commandLine\r\n  @Input()\r\n  get commandLine(): boolean { return this._commandLine; }\r\n  set commandLine(value: boolean) { this._commandLine = this.coerceBooleanProperty(value); }\r\n  @Input() filterOutput: string | undefined;\r\n  @Input() host: string | undefined;\r\n  @Input() prompt: string | undefined;\r\n  @Input() output: string | undefined;\r\n  @Input() user: string | undefined;\r\n\r\n  // Event emitters\r\n  @Output() error = new EventEmitter<string>();\r\n  @Output() load = new EventEmitter<string>();\r\n  @Output() ready = new EventEmitter<void>();\r\n\r\n  private _commandLine = false;\r\n  private _clipboard = false;\r\n  private _emoji = false;\r\n  private _inline = false;\r\n  private _katex = false;\r\n  private _lineHighlight = false;\r\n  private _lineNumbers = false;\r\n  private _mermaid = false;\r\n\r\n  private readonly destroyed$ = new Subject<void>();\r\n\r\n  constructor(\r\n    public element: ElementRef<HTMLElement>,\r\n    public markdownService: MarkdownService,\r\n    public viewContainerRef: ViewContainerRef,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    this.loadContent();\r\n  }\r\n\r\n  loadContent(): void {\r\n    if (this.data != null) {\r\n      this.handleData();\r\n      return;\r\n    }\r\n    if (this.src != null) {\r\n      this.handleSrc();\r\n      return;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.data && !this.src) {\r\n      this.handleTransclusion();\r\n    }\r\n\r\n    this.markdownService.reload$\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(() => this.loadContent());\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  render(markdown: string, decodeHtml = false): void {\r\n    const parsedOptions: ParseOptions = {\r\n      decodeHtml,\r\n      inline: this.inline,\r\n      emoji: this.emoji,\r\n      mermaid: this.mermaid,\r\n    };\r\n\r\n    const renderOptions: RenderOptions = {\r\n      clipboard: this.clipboard,\r\n      clipboardOptions: {\r\n        buttonComponent: this.clipboardButtonComponent,\r\n        buttonTemplate: this.clipboardButtonTemplate,\r\n      },\r\n      katex: this.katex,\r\n      katexOptions: this.katexOptions,\r\n      mermaid: this.mermaid,\r\n      mermaidOptions: this.mermaidOptions,\r\n    };\r\n\r\n    const parsed = this.markdownService.parse(markdown, parsedOptions);\r\n\r\n    this.element.nativeElement.innerHTML = parsed;\r\n\r\n    this.handlePlugins();\r\n\r\n    this.markdownService.render(this.element.nativeElement, renderOptions, this.viewContainerRef);\r\n\r\n    this.ready.emit();\r\n  }\r\n\r\n  private coerceBooleanProperty(value: boolean | ''): boolean {\r\n    return value != null && `${String(value)}` !== 'false';\r\n  }\r\n\r\n  private handleData(): void {\r\n    this.render(this.data!);\r\n  }\r\n\r\n  private handleSrc(): void {\r\n    this.markdownService\r\n      .getSource(this.src!)\r\n      .subscribe({\r\n        next: markdown => {\r\n          this.render(markdown);\r\n          this.load.emit(markdown);\r\n        },\r\n        error: error => this.error.emit(error),\r\n      });\r\n  }\r\n\r\n  private handleTransclusion(): void {\r\n    this.render(this.element.nativeElement.innerHTML, true);\r\n  }\r\n\r\n  private handlePlugins(): void {\r\n    if (this.commandLine) {\r\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.CommandLine);\r\n      this.setPluginOptions(this.element.nativeElement, {\r\n        dataFilterOutput: this.filterOutput,\r\n        dataHost: this.host,\r\n        dataPrompt: this.prompt,\r\n        dataOutput: this.output,\r\n        dataUser: this.user,\r\n      });\r\n    }\r\n    if (this.lineHighlight) {\r\n      this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\r\n    }\r\n    if (this.lineNumbers) {\r\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\r\n      this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\r\n    }\r\n  }\r\n\r\n  private setPluginClass(element: HTMLElement, plugin: string | string[]): void {\r\n    const preElements = element.querySelectorAll('pre');\r\n    for (let i = 0; i < preElements.length; i++) {\r\n      const classes = plugin instanceof Array ? plugin : [plugin];\r\n      preElements.item(i).classList.add(...classes);\r\n    }\r\n  }\r\n\r\n  private setPluginOptions(element: HTMLElement, options: { [key: string]: number | string | string[] | undefined }): void {\r\n    const preElements = element.querySelectorAll('pre');\r\n    for (let i = 0; i < preElements.length; i++) {\r\n      Object.keys(options).forEach(option => {\r\n        const attributeValue = options[option];\r\n        if (attributeValue) {\r\n          const attributeName = this.toLispCase(option);\r\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private toLispCase(value: string): string {\r\n    const upperChars = value.match(/([A-Z])/g);\r\n    if (!upperChars) {\r\n      return value;\r\n    }\r\n    let str = value.toString();\r\n    for (let i = 0, n = upperChars.length; i < n; i++) {\r\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\r\n    }\r\n    if (str.slice(0, 1) === '-') {\r\n      str = str.slice(1);\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","import { ElementRef, NgZone, Pipe, PipeTransform, ViewContainerRef } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { MarkdownService, ParseOptions, RenderOptions } from './markdown.service';\r\n\r\nexport type MarkdownPipeOptions = ParseOptions & RenderOptions;\r\n\r\n@Pipe({\r\n  name: 'markdown',\r\n})\r\nexport class MarkdownPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private domSanitizer: DomSanitizer,\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    private markdownService: MarkdownService,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n  ) { }\r\n\r\n  transform(value: string, options?: MarkdownPipeOptions): SafeHtml {\r\n    if (value == null) {\r\n      return '';\r\n    }\r\n\r\n    if (typeof value !== 'string') {\r\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${typeof value}]`);\r\n      return value;\r\n    }\r\n\r\n    const markdown = this.markdownService.parse(value, options);\r\n\r\n    this.zone.onStable\r\n      .pipe(first())\r\n      .subscribe(() => this.markdownService.render(this.elementRef.nativeElement, options, this.viewContainerRef));\r\n\r\n    return this.domSanitizer.bypassSecurityTrustHtml(markdown);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule, Provider, SecurityContext } from '@angular/core';\r\n\r\nimport { ClipboardButtonComponent } from './clipboard-button.component';\r\nimport { LanguagePipe } from './language.pipe';\r\nimport { MarkdownComponent } from './markdown.component';\r\nimport { MarkdownPipe } from './markdown.pipe';\r\nimport { MarkdownService, SECURITY_CONTEXT } from './markdown.service';\r\n\r\n// having a dependency on `HttpClientModule` within a library\r\n// breaks all the interceptors from the app consuming the library\r\n// here, we explicitely ask the user to pass a provider with\r\n// their own instance of `HttpClientModule`\r\nexport interface MarkdownModuleConfig {\r\n  loader?: Provider;\r\n  clipboardOptions?: Provider;\r\n  markedOptions?: Provider;\r\n  sanitize?: SecurityContext;\r\n}\r\n\r\nconst sharedDeclarations = [\r\n  ClipboardButtonComponent,\r\n  LanguagePipe,\r\n  MarkdownComponent,\r\n  MarkdownPipe,\r\n];\r\n\r\nconst sharedEntryComponents = [\r\n  ClipboardButtonComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: sharedDeclarations,\r\n  declarations: sharedDeclarations,\r\n  entryComponents: sharedEntryComponents,\r\n})\r\nexport class MarkdownModule {\r\n  static forRoot(markdownModuleConfig?: MarkdownModuleConfig): ModuleWithProviders<MarkdownModule> {\r\n    return {\r\n      ngModule: MarkdownModule,\r\n      providers: [\r\n        MarkdownService,\r\n        markdownModuleConfig && markdownModuleConfig.loader || [],\r\n        markdownModuleConfig && markdownModuleConfig.clipboardOptions || [],\r\n        markdownModuleConfig && markdownModuleConfig.markedOptions || [],\r\n        {\r\n          provide: SECURITY_CONTEXT,\r\n          useValue: markdownModuleConfig && markdownModuleConfig.sanitize != null\r\n            ? markdownModuleConfig.sanitize\r\n            : SecurityContext.HTML,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forChild(): ModuleWithProviders<MarkdownModule> {\r\n    return {\r\n      ngModule: MarkdownModule,\r\n    };\r\n  }\r\n}\r\n","/* eslint-disable */\r\nexport namespace MermaidAPI {\r\n  export enum SecurityLevel {\r\n    /**\r\n     * (default) tags in text are encoded, click functionality is disabled\r\n     */\r\n    Strict = 'strict',\r\n\r\n    /**\r\n     * tags in text are allowed, click functionality is enabled\r\n     */\r\n    Loose = 'loose',\r\n\r\n    /**\r\n     * html tags in text are allowed, (only script element is removed), click functionality is enabled\r\n     */\r\n    Antiscript = 'antiscript',\r\n\r\n    /**\r\n     * with this security level all rendering takes place in a sandboxed iframe.\r\n     * This prevent any javascript running in the context.\r\n     * This may hinder interactive functionality of the diagram like scripts,\r\n     * popups in sequence diagram or links to other tabs/targets etc.\r\n     */\r\n    Sandbox = 'sandbox'\r\n  }\r\n\r\n  export enum Theme {\r\n    /**\r\n     * Designed to modified, as the name implies it is supposed to be used as the base for making custom themes.\r\n     */\r\n    Base = 'base',\r\n\r\n    /**\r\n     * A theme full of light greens that is easy on the eyes.\r\n     */\r\n    Forest = 'forest',\r\n\r\n    /**\r\n     * A theme that would go well with other dark colored elements.\r\n     */\r\n    Dark = 'dark',\r\n\r\n    /**\r\n     *  The default theme for all diagrams.\r\n     */\r\n    Default = 'default',\r\n\r\n    /**\r\n     * The theme to be used for black and white printing\r\n     */\r\n    Neutral = 'neutral'\r\n  }\r\n\r\n  export enum LogLevel {\r\n    Debug = 1,\r\n    Info,\r\n    Warn,\r\n    Error,\r\n    Fatal\r\n  }\r\n\r\n  export interface FlowChartConfig {\r\n    /**\r\n     * **diagramPadding** - amount of padding around the diagram as a whole\r\n     * default: 8\r\n     */\r\n    diagramPadding?: number | undefined;\r\n\r\n    /**\r\n     * **htmlLabels** - Flag for setting whether or not a html tag should be used for rendering labels\r\n     * on the edges\r\n     * default: true\r\n     */\r\n    htmlLabels?: boolean | undefined;\r\n\r\n    /**\r\n     * **nodeSpacing** - Defines the spacing between nodes on the same level\r\n     * default: 50\r\n     */\r\n    nodeSpacing?: number | undefined;\r\n\r\n    /**\r\n     * **rankSpacing** - Defines the spacing between nodes on different levels\r\n     * default: 50\r\n     */\r\n    rankSpacing?: number | undefined;\r\n\r\n    /**\r\n     * default: 'monotoneX'\r\n     */\r\n    curve?: string | undefined;\r\n\r\n    /**\r\n     * **rankSpacing** - Only used in new experimental rendering, represents the padding between the labels and the shape\r\n     * default: 15\r\n     */\r\n    padding?: number | undefined;\r\n\r\n    /**\r\n     * default: true\r\n     */\r\n    useMaxWidth?: boolean | undefined;\r\n  }\r\n\r\n  export interface SequenceDiagramConfig {\r\n    /**\r\n     * **diagramMarginX** - margin to the right and left of the sequence diagram\r\n     * default: 50\r\n     */\r\n    diagramMarginX?: number | undefined;\r\n\r\n    /**\r\n     * **diagramMarginY** - margin to the over and under the sequence diagram\r\n     * default: 10\r\n     */\r\n    diagramMarginY?: number | undefined;\r\n\r\n    /**\r\n     * **actorMargin** - Margin between actors\r\n     * default: 10\r\n     */\r\n    actorMargin?: number | undefined;\r\n\r\n    /**\r\n     * **width** - Width of actor boxes\r\n     * default: 150\r\n     */\r\n    width?: number | undefined;\r\n\r\n    /**\r\n     * **height** - Height of actor boxes\r\n     * default: 65\r\n     */\r\n    height?: number | undefined;\r\n\r\n    /**\r\n     * **boxMargin** - Margin around loop boxes\r\n     * default: 10\r\n     */\r\n    boxMargin?: number | undefined;\r\n\r\n    /**\r\n     * **boxTextMargin** - margin around the text in loop/alt/opt boxes\r\n     * default: 5\r\n     */\r\n    boxTextMargin?: number | undefined;\r\n\r\n    /**\r\n     * **noteMargin** - margin around notes\r\n     * default: 10\r\n     */\r\n    noteMargin?: number | undefined;\r\n\r\n    /**\r\n     * **messageMargin** - Space between messages\r\n     * default: 35\r\n     */\r\n    messageMargin?: number | undefined;\r\n\r\n    /**\r\n     * **mirrorActors** - mirror actors under diagram\r\n     * default: true\r\n     */\r\n    mirrorActors?: boolean | undefined;\r\n\r\n    /**\r\n     * **bottomMarginAdj** - Depending on css styling this might need adjustment.\r\n     * Prolongs the edge of the diagram downwards\r\n     * default: 1\r\n     */\r\n    bottomMarginAdj?: number | undefined;\r\n\r\n    /**\r\n     * **useMaxWidth** - when this flag is set the height and width is set to 100% and is then scaling with the\r\n     * available space if not the absolute space required is used\r\n     * default: true\r\n     */\r\n    useMaxWidth?: boolean | undefined;\r\n\r\n    /**\r\n     * This will display arrows that start and begin at the same node as right angles, rather than a curve\r\n     * Default value: false\r\n     */\r\n    rightAngles?: boolean | undefined;\r\n  }\r\n\r\n  export interface GanttConfig {\r\n    /**\r\n     * **titleTopMargin** - margin top for the text over the gantt diagram\r\n     * default: 25\r\n     */\r\n    titleTopMargin?: number | undefined;\r\n\r\n    /**\r\n     * **barHeight** - the height of the bars in the graph\r\n     * default: 20\r\n     */\r\n    barHeight?: number | undefined;\r\n\r\n    /**\r\n     * **barGap** - the margin between the different activities in the gantt diagram\r\n     * default: 4\r\n     */\r\n    barGap?: number | undefined;\r\n\r\n    /**\r\n     *  **topPadding** - margin between title and gantt diagram and between axis and gantt diagram.\r\n     * default: 50\r\n     */\r\n    topPadding?: number | undefined;\r\n\r\n    /**\r\n     *  **leftPadding** - the space allocated for the section name to the left of the activities.\r\n     * default: 75\r\n     */\r\n    leftPadding?: number | undefined;\r\n\r\n    /**\r\n     *  **gridLineStartPadding** - Vertical starting position of the grid lines\r\n     * default: 35\r\n     */\r\n    gridLineStartPadding?: number | undefined;\r\n\r\n    /**\r\n     *  **fontSize** - font size ...\r\n     * default: 11\r\n     */\r\n    fontSize?: number | undefined;\r\n\r\n    /**\r\n     * **fontFamily** - font family ...\r\n     * default:  '\"Open-Sans\", \"sans-serif\"'\r\n     */\r\n    fontFamily?: string | undefined;\r\n\r\n    /**\r\n     * **numberSectionStyles** - the number of alternating section styles\r\n     * default: 4\r\n     */\r\n    numberSectionStyles?: number | undefined;\r\n\r\n    /**\r\n     * **axisFormat** - datetime format of the axis, this might need adjustment to match your locale and preferences\r\n     * default: '%Y-%m-%d'\r\n     */\r\n    axisFormat?: string | undefined;\r\n  }\r\n\r\n  export interface Config {\r\n    /**\r\n     * ### securityLevel\r\n     * This changes the default behaviour of mermaid so that after upgrade to 8.2,\r\n     * unless the `securityLevel` is not changed, tags in flowcharts are encoded as tags and clicking is disabled.\r\n     * **sandbox** security level is still in the beta version.\r\n     * default: SecurityLevel.Strict\r\n     */\r\n    securityLevel?: SecurityLevel | undefined;\r\n\r\n    theme?: Theme | undefined;\r\n\r\n    themeVariables?: any; // [todo]\r\n\r\n    themeCSS?: string | undefined;\r\n\r\n    maxTextSize?: number | undefined;\r\n\r\n    darkMode?: boolean | undefined;\r\n\r\n    fontFamily?: string | undefined;\r\n\r\n    /**\r\n     * logLevel , decides the amount of logging to be used.\r\n     * default: LogLevel.Fatal\r\n     */\r\n    logLevel?: LogLevel | undefined;\r\n\r\n    /**\r\n     * **startOnLoad** - This options controls whether or mermaid starts when the page loads\r\n     * default: true\r\n     */\r\n    startOnLoad?: boolean | undefined;\r\n\r\n    /**\r\n     * **arrowMarkerAbsolute** - This options controls whether or arrow markers in html code will be absolute paths or\r\n     * an anchor, #. This matters if you are using base tag settings.\r\n     * default: false\r\n     */\r\n    arrowMarkerAbsolute?: boolean | undefined;\r\n\r\n    secure?: Array<keyof Config> | undefined;\r\n\r\n    deterministicIds?: boolean | undefined;\r\n\r\n    deterministicIDSeed?: string | undefined;\r\n\r\n    /**\r\n     * ### flowchart\r\n     * *The object containing configurations specific for flowcharts*\r\n     */\r\n    flowchart?: FlowChartConfig | undefined;\r\n\r\n    /**\r\n     * ###  sequenceDiagram\r\n     * The object containing configurations specific for sequence diagrams\r\n     */\r\n    sequence?: SequenceDiagramConfig | undefined;\r\n\r\n    /**\r\n     * ### gantt\r\n     * The object containing configurations specific for gantt diagrams*\r\n     */\r\n    gantt?: GanttConfig | undefined;\r\n\r\n    journey?: any; // [todo]\r\n\r\n    class?: any; // [todo]\r\n\r\n    git?: any; // [todo]\r\n\r\n    state?: any; // [todo]\r\n\r\n    pie?: any; // [todo]\r\n\r\n    requirement?: any; // [todo]\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["MarkedRenderer","i1","i2.ClipboardOptions","i3.MarkedOptions","i1.MarkdownService","i2.MarkdownService"],"mappings":"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"}